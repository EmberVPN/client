name: CI/CD

on:
  push:
    branches: 'master'
  pull_request:
    branches: 'master'

jobs:

  version:
    name: Bump Version
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: test
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - run: |
          git config --global user.name 'CI/CD'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          npm version patch -m "Bump: %s"
          git push

  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - if: ${{ github.event_name == 'pull_request' }}
        name: "Lint"
        run: npm run lint

      - if: ${{ github.event_name == 'push' }}
        name: "Fix"
        run: |
          git config --global user.name 'CI/CD'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          npm run lint || true
          git commit -am "Eslint: fix all" || true
          git push || true

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: "Build"
        run: npm run build

      - name: "Test"
        run: npm run test

  build-win32:
    name: Build (win32)
    runs-on: windows-latest
    if: github.ref == 'refs/heads/master'
    needs: [ version ]
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci
        
      - name: Build
        run: npm run build:win

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: win32
          path: |
            dist/*.exe
            dist/*.msi
  
  build-linux:
    name: Build (linux)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [ version ]
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci
        
      - name: Build
        run: npm run build:linux

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: |
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.tar.gz
            dist/*.zip
  
  build-macos:
    name: Build (macos)
    runs-on: macos-latest
    if: github.ref == 'refs/heads/master'
    needs: [ version ]
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci
        
      - name: Build
        run: npm run build:mac

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: darwin
          path: |
            dist/*.dmg

  release:
    name: Release (all)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [ build-win32, build-macos, build-linux ]
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
          repository: EmberVPN/releases
          lfs: false

      - name: Download (win32)
        uses: actions/download-artifact@v3
        with:
          name: win32
          path: win32/

      - name: Download (linux)
        uses: actions/download-artifact@v3
        with:
          name: linux
          path: linux/

      - name: Download (macos)
        uses: actions/download-artifact@v3
        with:
          name: darwin
          path: darwin/

      - name: Push binarys to releases (win32)
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.TOKEN }}
        with:
          source-directory: 'win32'
          destination-github-username: 'EmberVPN'
          destination-repository-name: 'releases'
          target-directory: 'win32'
          target-branch: 'master'
          user-email: 'github-actions[bot]@users.noreply.github.com'

      - name: Push binarys to releases (linux)
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.TOKEN }}
        with:
          source-directory: 'linux'
          destination-github-username: 'EmberVPN'
          destination-repository-name: 'releases'
          target-directory: 'linux'
          target-branch: 'master'
          user-email: 'github-actions[bot]@users.noreply.github.com'
      - name: Push binarys to releases (macos)
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.TOKEN }}
        with:
          source-directory: 'darwin'
          destination-github-username: 'EmberVPN'
          destination-repository-name: 'releases'
          target-directory: 'darwin'
          target-branch: 'master'
          user-email: 'github-actions[bot]@users.noreply.github.com'
