name: CI/CD

on:
  push:
    branches: 'master'

jobs:

  version:
    name: Bump Version
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: lint
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - run: |
          git config --global user.name 'CI/CD'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          npm version patch -m "Bump: %s"
          git push

  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: "Lint"
        run: |
          git config --global user.name 'CI/CD'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          npm run lint || true
          git commit -am "Eslint: fix all" || true
          git push || true

  build-win:
    name: Build (win32)
    runs-on: windows-latest
    if: github.ref == 'refs/heads/master'
    needs: [ version ]
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci
        
      - name: Build
        run: npm run build:win

      - name: Move
        run: |
          cd dist
          mkdir win32
          mv *.exe win32

      - name: Push binarys to releases
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.TOKEN }}
        with:
          source-directory: 'dist/win32'
          destination-github-username: 'EmberVPN'
          destination-repository-name: 'releases'
          target-directory: 'win32'
          target-branch: 'master'
          user-email: 'github-actions[bot]@users.noreply.github.com'
  
  build-linux:
    name: Build (linux)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [ version ]
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci
        
      - name: Build
        run: npm run build:linux

      - name: Move
        run: |
          cd dist
          mkdir linux
          mv *.deb linux

      - name: Push binarys to releases
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.TOKEN }}
        with:
          source-directory: 'dist/linux'
          destination-github-username: 'EmberVPN'
          destination-repository-name: 'releases'
          target-directory: 'linux'
          target-branch: 'master'
          user-email: 'github-actions[bot]@users.noreply.github.com'
  
  build-macos:
    name: Build (macos)
    runs-on: macos-latest
    if: github.ref == 'refs/heads/master'
    needs: [ version ]
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci
        
      - name: Build
        run: npm run build:mac

      - name: Move
        run: |
          cd dist
          mkdir darwin
          mv *.dmg darwin

      - name: Push binarys to releases
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.TOKEN }}
        with:
          source-directory: 'dist/darwin'
          destination-github-username: 'EmberVPN'
          destination-repository-name: 'releases'
          target-directory: 'darwin'
          target-branch: 'master'
          user-email: 'github-actions[bot]@users.noreply.github.com'