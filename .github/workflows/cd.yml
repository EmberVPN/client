name: Continuous Deployment

on:
  workflow_run:
    workflows: ["Continuous Integration"]
    types:
      - completed
    branches:
      - master      

jobs:
  
  get-latest:
    name: Get Latest Version
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Delete Old Artifacts
        uses: actions/github-script@v6
        id: artifact
        with:
          script: |
            const res = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })

            res.data.artifacts
              .forEach(({ id }) => {
                github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: id,
                })
              })

      - name: Get Latest Version
        id: get_latest
        run: |
          echo ::set-output name=version::$(cat package.json | jq -r '.version')

  build-win32:
    name: Build (win32)
    runs-on: windows-latest
    permissions:
      contents: write
    needs: [ get-latest ]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build:win

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: win32
          path: |
            dist/*.exe
            dist/*.msi

  build-linux:
    name: Build (linux)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [ get-latest ]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build:linux

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: |
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.tar.gz
            dist/*.zip

  build-macos:
    name: Build (macos)
    runs-on: macos-latest
    permissions:
      contents: write
    needs: [ get-latest ]
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm ci
        
      - name: Build
        run: npm run build:mac

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: darwin
          path: |
            dist/*.dmg

  release:
    name: Release (all)
    runs-on: ubuntu-latest
    needs: [ build-win32, build-macos, build-linux, get-latest ]
    permissions:
      contents: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
          repository: EmberVPN/releases
          lfs: false

      - name: Download (win32)
        uses: actions/download-artifact@v3
        with:
          name: win32
          path: win32/

      - name: Download (linux)
        uses: actions/download-artifact@v3
        with:
          name: linux
          path: linux/

      - name: Download (macos)
        uses: actions/download-artifact@v3
        with:
          name: darwin
          path: darwin/

      - name: Push binarys to releases (win32)
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.GITHUB_TOKEN }}
        with:
          source-directory: 'win32'
          destination-github-username: 'EmberVPN'
          destination-repository-name: 'releases'
          target-directory: 'win32'
          target-branch: 'master'
          user-email: 'github-actions[bot]@users.noreply.github.com'

      - name: Push binarys to releases (linux)
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.GITHUB_TOKEN }}
        with:
          source-directory: 'linux'
          destination-github-username: 'EmberVPN'
          destination-repository-name: 'releases'
          target-directory: 'linux'
          target-branch: 'master'
          user-email: 'github-actions[bot]@users.noreply.github.com'

      - name: Push binarys to releases (macos)
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.GITHUB_TOKEN }}
        with:
          source-directory: 'darwin'
          destination-github-username: 'EmberVPN'
          destination-repository-name: 'releases'
          target-directory: 'darwin'
          target-branch: 'master'
          user-email: 'github-actions[bot]@users.noreply.github.com'
